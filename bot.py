
import logging
from aiogram import Bot, Dispatcher, types, executor
import requests
import os

API_TOKEN = os.getenv("API_TOKEN")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

CATEGORY_DELIVERY = {
    "–û–±—É–≤—å / –í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞": 1500,
    "–¢–æ–ª—Å—Ç–æ–≤–∫–∏ / –®—Ç–∞–Ω—ã": 1000,
    "–§—É—Ç–±–æ–ª–∫–∏ / –®–æ—Ä—Ç—ã": 700,
    "–ù–æ—Å–∫–∏ / –ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ": 500,
    "–°—É–º–∫–∏": 1500
}

def get_cny_to_rub_rate():
    try:
        r = requests.get("https://www.cbr-xml-daily.ru/daily_json.js")
        rate = r.json()["Valute"]["CNY"]["Value"]
        return rate + 1
    except:
        return None

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for cat in CATEGORY_DELIVERY.keys():
        kb.add(cat)
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!
"
                         "–Ø –ø–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ —Å Poizon.
"
                         "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞:", reply_markup=kb)

@dp.message_handler(lambda msg: msg.text in CATEGORY_DELIVERY)
async def handle_category(message: types.Message):
    category = message.text
    await message.answer("–í–≤–µ–¥–∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤ —é–∞–Ω—è—Ö (¬•):")
    dp.register_message_handler(lambda m: handle_price(m, category), content_types=types.ContentTypes.TEXT)

async def handle_price(message: types.Message, category):
    try:
        price_cny = float(message.text.replace(",", "."))
        rate = get_cny_to_rub_rate()
        if rate is None:
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å —é–∞–Ω—è. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
            return
        base_price = price_cny * rate
        markup_price = base_price * 1.2
        delivery = CATEGORY_DELIVERY[category]
        total = int(markup_price + delivery)
        await message.answer(f"üí∏ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: <b>{total} ‚ÇΩ</b>

"
                             "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É: @MikhailBaburin",
                             parse_mode="HTML")
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —á–∏—Å–ª–æ–≤—É—é —Ü–µ–Ω—É.")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
